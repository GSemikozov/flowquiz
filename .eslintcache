[{"/Users/herman/flowquiz/src/features/filestack/helpers.ts":"1","/Users/herman/flowquiz/src/serviceWorker.ts":"2","/Users/herman/flowquiz/src/features/filestack/filestackSlice.ts":"3","/Users/herman/flowquiz/src/features/filestack/Filestack.tsx":"4","/Users/herman/flowquiz/src/features/filestack/useFilestack.ts":"5","/Users/herman/flowquiz/src/index.tsx":"6","/Users/herman/flowquiz/src/features/quiz-list/quizListSlice.ts":"7","/Users/herman/flowquiz/src/App.tsx":"8","/Users/herman/flowquiz/src/features/quiz-list/QuizItem.tsx":"9","/Users/herman/flowquiz/src/features/quiz-list/QuizItemsList.tsx":"10","/Users/herman/flowquiz/src/features/quiz-list/EditableTextField.tsx":"11","/Users/herman/flowquiz/src/services/sentry/sentry.ts":"12","/Users/herman/flowquiz/src/features/quiz-list/QuizRadioGroup.tsx":"13","/Users/herman/flowquiz/src/components/Navbar/Navbar.tsx":"14","/Users/herman/flowquiz/src/features/counter/counterSlice.ts":"15","/Users/herman/flowquiz/src/hooks/useEditableText.ts":"16","/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableOptions.tsx":"17","/Users/herman/flowquiz/src/app/store.ts":"18","/Users/herman/flowquiz/src/features/quiz-list/QuestionOptionsAnswer.tsx":"19","/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableOption.tsx":"20","/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableInput.tsx":"21","/Users/herman/flowquiz/src/features/quiz-list/QuizListItemEditableTitle.tsx":"22","/Users/herman/flowquiz/src/PreviewStepper.tsx":"23"},{"size":387,"mtime":1611611623315,"results":"24","hashOfConfig":"25"},{"size":5424,"mtime":1607028045529,"results":"26","hashOfConfig":"25"},{"size":1273,"mtime":1611777958328,"results":"27","hashOfConfig":"25"},{"size":3544,"mtime":1611777958327,"results":"28","hashOfConfig":"25"},{"size":3928,"mtime":1611615354146,"results":"29","hashOfConfig":"25"},{"size":1016,"mtime":1611611623316,"results":"30","hashOfConfig":"25"},{"size":8444,"mtime":1613916814629,"results":"31","hashOfConfig":"25"},{"size":3971,"mtime":1613919305444,"results":"32","hashOfConfig":"25"},{"size":1516,"mtime":1613916880313,"results":"33","hashOfConfig":"25"},{"size":1300,"mtime":1613666505489,"results":"34","hashOfConfig":"25"},{"size":5660,"mtime":1613664098160,"results":"35","hashOfConfig":"25"},{"size":728,"mtime":1611611623317,"results":"36","hashOfConfig":"25"},{"size":2451,"mtime":1612265277878,"results":"37","hashOfConfig":"25"},{"size":274,"mtime":1610976060430,"results":"38","hashOfConfig":"25"},{"size":1851,"mtime":1607028045528,"results":"39","hashOfConfig":"25"},{"size":1131,"mtime":1613909795213,"results":"40","hashOfConfig":"25"},{"size":3122,"mtime":1613914638128,"results":"41","hashOfConfig":"25"},{"size":846,"mtime":1612271081454,"results":"42","hashOfConfig":"25"},{"size":4152,"mtime":1612703881991,"results":"43","hashOfConfig":"25"},{"size":4761,"mtime":1613912446420,"results":"44","hashOfConfig":"25"},{"size":1766,"mtime":1613913812250,"results":"45","hashOfConfig":"25"},{"size":1863,"mtime":1613915217992,"results":"46","hashOfConfig":"25"},{"size":4594,"mtime":1613923693969,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"at2kyv",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/herman/flowquiz/src/features/filestack/helpers.ts",[],"/Users/herman/flowquiz/src/serviceWorker.ts",[],["100","101"],"/Users/herman/flowquiz/src/features/filestack/filestackSlice.ts",[],["102","103"],"/Users/herman/flowquiz/src/features/filestack/Filestack.tsx",[],["104","105"],"/Users/herman/flowquiz/src/features/filestack/useFilestack.ts",[],"/Users/herman/flowquiz/src/index.tsx",[],"/Users/herman/flowquiz/src/features/quiz-list/quizListSlice.ts",["106","107","108"],"/Users/herman/flowquiz/src/App.tsx",[],"/Users/herman/flowquiz/src/features/quiz-list/QuizItem.tsx",["109"],"/Users/herman/flowquiz/src/features/quiz-list/QuizItemsList.tsx",["110"],"/Users/herman/flowquiz/src/features/quiz-list/EditableTextField.tsx",["111","112","113","114"],"/Users/herman/flowquiz/src/services/sentry/sentry.ts",[],"/Users/herman/flowquiz/src/features/quiz-list/QuizRadioGroup.tsx",[],"/Users/herman/flowquiz/src/components/Navbar/Navbar.tsx",[],"/Users/herman/flowquiz/src/features/counter/counterSlice.ts",[],["115","116"],"/Users/herman/flowquiz/src/hooks/useEditableText.ts",[],"/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableOptions.tsx",["117","118","119","120","121","122"],"/Users/herman/flowquiz/src/app/store.ts",[],"/Users/herman/flowquiz/src/features/quiz-list/QuestionOptionsAnswer.tsx",["123","124","125","126","127","128","129"],"/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableOption.tsx",["130","131","132","133","134","135"],"import React, {useCallback, useEffect, useRef, useState} from \"react\";\nimport {removeQuestionsListOption, updateQuestionsOptionAnswer, updateQuizListItemTitle, updateQuestionsListOptionTitle, toggleQuestionsListOptionChecked} from \"./quizListSlice\";\nimport {Grid, IconButton, InputBase, TextareaAutosize} from \"@material-ui/core\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport {Check, Close} from \"@material-ui/icons\";\nimport {useDispatch} from \"react-redux\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {QuizItemEditableInput} from \"./QuizItemEditableInput\";\n\nconst useStyles = makeStyles((theme) => ({\n    label: {\n        margin: 0,\n    },\n    textField: {\n        minWidth: 240,\n        maxWidth: \"100%\",\n        color: \"black\",\n        opacity: 1,\n        borderBottom: 0,\n        boxSizing: \"border-box\",\n        \"&:before\": {\n            borderBottom: \"0 !important\",\n        },\n    },\n    disabled: {\n        color: \"black\",\n        borderBottom: 0,\n        \"&:before\": {\n            borderBottom: 0,\n        },\n    },\n    btnIcons: {\n        marginLeft: 10,\n    },\n}));\n\nexport const QuizItemEditableOption = ({ initialTitle, name, quizListId, questionId }: { initialTitle: string; name: string; quizListId: number; questionId: number; }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const [dbValue, saveToDb] = useState(\"\"); // would be an API call normally\n    const [answer, setAnswer] = useState(\"\");\n    const [title, setTitle] = useState(initialTitle);\n\n    const handleAnswerChange = (e: any) => {\n        setAnswer(e.target.value);\n    };\n\n    const updateItemChecked = useCallback((questionId) => {\n        dispatch(toggleQuestionsListOptionChecked({questionId: questionId, quizListItemId: quizListId}))\n    }, [dispatch, quizListId]);\n\n    const updateItemTitle = useCallback(({ title }: { title: string; }) => {\n        console.log(\"updateQuizListItemTitle: \", quizListId, title);\n        // dispatch(updateQuizListItemTitle({title: title, id: quizListId}));\n        dispatch(updateQuestionsListOptionTitle({title: title, questionId: questionId, quizListItemId: quizListId}))\n    }, [dispatch, quizListId]);\n\n    const updateItemAnswer = useCallback(({ questionId }: { answer: string; questionId: number; }) => {\n        console.log(\"UPDATE ANSWER: \", quizListId, questionId, answer);\n        dispatch(updateQuestionsOptionAnswer({answer: answer, questionId: questionId, quizListItemId: quizListId}));\n    }, [dispatch, quizListId]);\n\n    const removeItem = useCallback(() => {\n        dispatch(removeQuestionsListOption({\n            quizListItemId: quizListId,\n            questionId: questionId,\n        }));\n    }, [dispatch, quizListId, questionId]);\n\n    const initialRender = useRef(true);\n\n    useEffect(() => {\n        console.log(\"will store dbValue\", dbValue);\n        setTitle(dbValue);\n        if (initialRender.current) {\n            initialRender.current = false;\n        } else {\n            updateItemTitle({title: dbValue});\n        }\n    }, [dispatch, dbValue]);\n\n    return (\n        <>\n            <Grid container alignItems=\"center\">\n                <Grid item>\n                    <FormControlLabel\n                        key={questionId}\n                        value={`${questionId}`}\n                        control={<Radio />}\n                        label=\"\"\n                        onBlur={(e) => e.preventDefault()}\n                        onChange={() => updateItemChecked(questionId)}\n                        className={classes.label}\n                    />\n                </Grid>\n                <Grid item style={{flexGrow: 1}}>\n                    <QuizItemEditableInput name={name} title={title} saveToDb={saveToDb} />\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={removeItem}><Close /></IconButton>\n                </Grid>\n            </Grid>\n            <Grid container spacing={1}>\n                <Grid item style={{flexGrow: 1, margin: \"0 16px 0 32px\", boxSizing: \"border-box\"}}>\n                    <TextareaAutosize\n                        style={{width: \"100%\", padding: \"10px\", boxSizing: \"border-box\", border: \"none\", borderLeft: \"2px solid gray\", outline: \"none\", resize: \"none\"}}\n                        aria-label=\"minimum height\"\n                        rowsMin={1}\n                        placeholder={`Place your comment here`}\n                        value={answer}\n                        onChange={(e) => handleAnswerChange(e)}\n                        onBlur={() => updateItemAnswer({answer: \"hello\", questionId: questionId})}\n                    />\n                </Grid>\n            </Grid>\n        </>\n    )\n};\n","/Users/herman/flowquiz/src/features/quiz-list/QuizItemEditableInput.tsx",["136","137"],"import React, {Dispatch, SetStateAction, useEffect, useRef} from \"react\";\nimport {useEditableText} from \"../../hooks/useEditableText\";\nimport debounce from \"lodash.debounce\";\nimport {InputBase} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        minWidth: 240,\n        maxWidth: \"100%\",\n        color: \"black\",\n        opacity: 1,\n        borderBottom: 0,\n        boxSizing: \"border-box\",\n        \"&:before\": {\n            borderBottom: \"0 !important\",\n        },\n    },\n}));\n\nexport const QuizItemEditableInput = ({name, title, saveToDb}: {name: string; title: string, saveToDb: Dispatch<SetStateAction<string>>}) => {\n    const classes = useStyles();\n    const {\n        handleChange,\n        toggleEditMode,\n        text,\n        editMode,\n    } = useEditableText(title);\n\n    const debouncedSave = useRef(debounce((nextValue: string) => {\n        saveToDb(nextValue);\n    }, 500)).current;\n\n    const handleOnChange = (event: any) => {\n        const { value: nextValue } = event.target;\n        handleChange(event);\n        debouncedSave(nextValue);\n    };\n\n    // useEffect(() => {\n    //     console.log(\"editMode rendered\", editMode);\n    // }, [editMode])\n\n    return (\n        <InputBase\n            autoFocus\n            name={name}\n            defaultValue={title}\n            // error={text === \"\"}\n            onChange={(e) => {\n                handleOnChange(e);\n            }}\n            disabled={!editMode}\n            className={classes.textField}\n            // onMouseEnter={() => handleMouseOver()}\n            onMouseLeave={() => toggleEditMode()}\n            onDoubleClick={() => toggleEditMode()}\n            fullWidth={true}\n        />\n    )\n}\n","/Users/herman/flowquiz/src/features/quiz-list/QuizListItemEditableTitle.tsx",["138","139","140","141","142","143"],"/Users/herman/flowquiz/src/PreviewStepper.tsx",["144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"146","replacedBy":"150"},{"ruleId":"148","replacedBy":"151"},{"ruleId":"146","replacedBy":"152"},{"ruleId":"148","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":4,"column":9,"nodeType":"156","messageId":"157","endLine":4,"endColumn":20},{"ruleId":"154","severity":1,"message":"158","line":5,"column":16,"nodeType":"156","messageId":"157","endLine":5,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":175,"column":49,"nodeType":"161","messageId":"162","endLine":175,"endColumn":51},{"ruleId":"154","severity":1,"message":"163","line":4,"column":52,"nodeType":"156","messageId":"157","endLine":4,"endColumn":62},{"ruleId":"154","severity":1,"message":"164","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":18},{"ruleId":"154","severity":1,"message":"165","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":17},{"ruleId":"154","severity":1,"message":"166","line":4,"column":9,"nodeType":"156","messageId":"157","endLine":4,"endColumn":16},{"ruleId":"154","severity":1,"message":"167","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":27},{"ruleId":"154","severity":1,"message":"168","line":34,"column":7,"nodeType":"156","messageId":"157","endLine":34,"endColumn":21},{"ruleId":"146","replacedBy":"169"},{"ruleId":"148","replacedBy":"170"},{"ruleId":"154","severity":1,"message":"171","line":4,"column":9,"nodeType":"156","messageId":"157","endLine":4,"endColumn":20},{"ruleId":"154","severity":1,"message":"163","line":4,"column":39,"nodeType":"156","messageId":"157","endLine":4,"endColumn":49},{"ruleId":"154","severity":1,"message":"172","line":9,"column":40,"nodeType":"156","messageId":"157","endLine":9,"endColumn":70},{"ruleId":"154","severity":1,"message":"173","line":13,"column":9,"nodeType":"156","messageId":"157","endLine":13,"endColumn":34},{"ruleId":"174","severity":1,"message":"175","line":34,"column":8,"nodeType":"176","endLine":34,"endColumn":10,"suggestions":"177"},{"ruleId":"174","severity":1,"message":"178","line":36,"column":11,"nodeType":"179","endLine":39,"endColumn":6},{"ruleId":"154","severity":1,"message":"180","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":22},{"ruleId":"154","severity":1,"message":"181","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":17},{"ruleId":"154","severity":1,"message":"182","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":14},{"ruleId":"154","severity":1,"message":"183","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":12},{"ruleId":"154","severity":1,"message":"184","line":12,"column":15,"nodeType":"156","messageId":"157","endLine":12,"endColumn":25},{"ruleId":"154","severity":1,"message":"185","line":13,"column":22,"nodeType":"156","messageId":"157","endLine":13,"endColumn":30},{"ruleId":"154","severity":1,"message":"186","line":44,"column":11,"nodeType":"156","messageId":"157","endLine":44,"endColumn":23},{"ruleId":"154","severity":1,"message":"187","line":2,"column":65,"nodeType":"156","messageId":"157","endLine":2,"endColumn":88},{"ruleId":"154","severity":1,"message":"188","line":3,"column":27,"nodeType":"156","messageId":"157","endLine":3,"endColumn":36},{"ruleId":"154","severity":1,"message":"189","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":14},{"ruleId":"174","severity":1,"message":"190","line":57,"column":8,"nodeType":"176","endLine":57,"endColumn":30,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"192","line":62,"column":8,"nodeType":"176","endLine":62,"endColumn":30,"suggestions":"193"},{"ruleId":"174","severity":1,"message":"194","line":81,"column":8,"nodeType":"176","endLine":81,"endColumn":27,"suggestions":"195"},{"ruleId":"154","severity":1,"message":"196","line":1,"column":42,"nodeType":"156","messageId":"157","endLine":1,"endColumn":51},{"ruleId":"154","severity":1,"message":"197","line":26,"column":9,"nodeType":"156","messageId":"157","endLine":26,"endColumn":13},{"ruleId":"154","severity":1,"message":"198","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"199","line":1,"column":26,"nodeType":"156","messageId":"157","endLine":1,"endColumn":40},{"ruleId":"154","severity":1,"message":"196","line":1,"column":55,"nodeType":"156","messageId":"157","endLine":1,"endColumn":64},{"ruleId":"154","severity":1,"message":"200","line":1,"column":74,"nodeType":"156","messageId":"157","endLine":1,"endColumn":82},{"ruleId":"154","severity":1,"message":"197","line":29,"column":9,"nodeType":"156","messageId":"157","endLine":29,"endColumn":13},{"ruleId":"154","severity":1,"message":"201","line":30,"column":9,"nodeType":"156","messageId":"157","endLine":30,"endColumn":17},{"ruleId":"154","severity":1,"message":"202","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":20},{"ruleId":"154","severity":1,"message":"203","line":40,"column":7,"nodeType":"156","messageId":"157","endLine":40,"endColumn":19},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],["204"],["205"],["204"],["205"],"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'uuid' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Typography' is defined but never used.","'ClickType' is defined but never used.","'TextField' is defined but never used.","'connect' is defined but never used.","'updateTitleAction' is defined but never used.","'initFieldState' is assigned a value but never used.",["204"],["205"],"'FormControl' is defined but never used.","'updateQuestionsListOptionTitle' is defined but never used.","'QuizListItemEditableTitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'listItemData', and 'store'. Either include them or remove the dependency array.","ArrayExpression",["206"],"The 'newOptionData' object makes the dependencies of useCallback Hook (at line 43) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'newOptionData' in its own useMemo() Hook.","VariableDeclarator","'FormHelperText' is defined but never used.","'FormLabel' is defined but never used.","'Button' is defined but never used.","'Add' is defined but never used.","'IconButton' is defined but never used.","'useStore' is defined but never used.","'handleUpdate' is assigned a value but never used.","'updateQuizListItemTitle' is defined but never used.","'InputBase' is defined but never used.","'Check' is defined but never used.","React Hook useCallback has a missing dependency: 'questionId'. Either include it or remove the dependency array.",["207"],"React Hook useCallback has a missing dependency: 'answer'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'updateItemTitle'. Either include it or remove the dependency array.",["209"],"'useEffect' is defined but never used.","'text' is assigned a value but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'useState' is defined but never used.","'editMode' is assigned a value but never used.","'memo' is defined but never used.","'QuestionItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [id, listItemData, store]",{"range":"218","text":"219"},"Update the dependencies array to be: [dispatch, questionId, quizListId]",{"range":"220","text":"221"},"Update the dependencies array to be: [answer, dispatch, quizListId]",{"range":"222","text":"223"},"Update the dependencies array to be: [dispatch, dbValue, updateItemTitle]",{"range":"224","text":"225"},[1322,1324],"[id, listItemData, store]",[2225,2247],"[dispatch, questionId, quizListId]",[2551,2573],"[answer, dispatch, quizListId]",[3102,3121],"[dispatch, dbValue, updateItemTitle]"]